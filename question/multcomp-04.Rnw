\section{Aufgabe \hfill (10 Punkte)}

\textit{Geben Sie grundsätzlich Formeln und Rechenweg zur Lösung der Teilaufgaben mit an!} \\[1Ex]
 
<<>>=
name <- par_lst$naming |> sample(1)
avatar_file <- list.files(file.path(exam_path, "avatare"), full.names = TRUE)|> 
  str_subset(name)
jahr <- par_lst$year
obser <- par_lst$obser |> sample(1) |> magrittr::extract2(1) |> sample(1)
avatar1file <- str_c("\\includegraphics[width = 1.3cm]{", avatar_file, "}")
@
 
%% --------------------------------------------------------------------
\begin{minipage}[t]{0.5\textwidth}
\Sexpr{avatar1file}
\end{minipage}
\begin{minipage}[t]{0.5\textwidth}
\hfill
\href{https://youtu.be/RagTFFKFbFg}{\includegraphics[width = 2cm]{img/youtube}}
\end{minipage}
\vspace{-3ex}
%% --------------------------------------------------------------------

<<>>=
pronom <- lst(sie = c("ihrem", "ihrer", "ihren", "ihr", "sie", "ihre", "ihr", "die", "Frau"),
              er = c("seinem", "seiner", "seinen", "ihm", "ihn", "seine", "sein", "der", "Mann"))[[names(name)]]
project <- c(str_c(pronom[6], " Abschlussarbeit"), str_c(pronom[8], " Projektbericht"),
             str_c(pronom[6], " Hausarbeit")) |> sample(1)
betreuer <- c(str_c(pronom[6], " Betreuerin"), str_c(pronom[7], " Betreuer")) |> sample(1)

exp <- lst(pflanze = c("ein Gewächshausexperiment",
                       "ein Freilandversuch",
                       "einen Versuch in einer Klimakammer",
                       "ein Feldexperiment"),
           tier = c("ein Stallexperiment", 
                    "ein Kreuzungsexperiment",
                    "einen Leistungssteigerungsversuch"))[[names(obser)]] %>% 
  sample(1)

x_val <- lst(pflanze = c("Düngestufen ($ctrl$, $low$, $mid$ und $high$)",
                         "Lichtstufen ($none$, $200lm$, $400lm$ und $800lm$)",
                         "Lüftungssysteme ($ctrl$, $storm$, $thunder$ und $tornado$)",
                         "Substrattypen ($kompost$, $torf$, $40p60n$ und $70p30n$)",
                         "Bewässerungstypen ($ctrl$, $low$, $mid$ und $high$)",
                         "Genotypen ($00$, $AA$, $AB$ und $BB$)"),
           tier = c("Ernährungszusatz ($ctrl$, $fedX$, $proteinX$ und $getIt$)", 
                    "Flüssignahrung ($ctrl$, $superIn$, $compostIn$ und $flOw$)",
                    "Genotypen ($00$, $AA$, $AB$ und $BB$)",
                    "Elterlinie ($ctrl$, $Standard$, $SLOW$, und $Xray$)",
                    "Lüftungssystem ($keins$, $storm$, $tornado$ und $thunder$)",
                    "Bestandsdichte ($effizient$, $standard$, $weit$ und $kontakt$)"))[[names(obser)]] %>% 
  sample(1)

y_val <- lst(pflanze = c("Frischegewicht [kg/ha]",
                         "Trockengewicht [kg/ha]",
                         "Chlorophyllgehalt (SPAD-502Plus) [SPAD]",
                         "Proteingehalt [g/kg]"),
             tier = c("Schlachtgewicht [kg]", 
                      "Protein/Fettrate [\\%/kg]",
                      "Fettgehalt [\\%/kg]",
                      "Gewichtszuwachs in der 1LW"))[[names(obser)]] %>% 
  sample(1)

program <- c("SPSS", "Excel", "DataTab") |> sample(1)

groups_vec <- x_val %>% 
  str_split("\\(|\\s|,|\\)", simplify = TRUE) %>% 
  str_subset("\\$") %>% 
  str_replace_all("\\$", "")
gen_data <- function(...){
  n_vec <- c(4:6) %>% sample(1)
  mean_vec <- c(8, 10, 12) %>% sample(1)
  sd_vec <- c(2, 2.5, 3) %>% sample(1)
  temp_tbl <- tibble(temp = rnorm(n = n_vec, mean = mean_vec, sd = sd_vec)) %>%
    mutate(temp = round(temp, 1)) %>% 
    set_names(stringi::stri_rand_strings(1, 7, '[A-Z]')) %>% 
    gather 
  return(temp_tbl)
}

ques_vec <-  c(str_c("'Oh, nee!', ruft ", name, " aus und rollt entnervt mit ", pronom[3], " Augen. ", name, " hatte ", pronom[6], " gesamte Analyse in ", program, " gerechnet. Das war ja auch alles in Ordnung. Abbilungen haben geklappt und auch die statistischen Tests gingen dann irgendwie doch. Aber das CLD nicht. ", name, " findet einfach keine Möglichkeit ein CLD in ", program, " zu erhalten. Aber ", betreuer, " möchte unbedingt ein CLD. Sonst wird es mit der Abgabe nichts. Dabei hatte ", names(name), " schon wirklich eine Menge gemacht! ", name, " hatte sich zwei Variablen mit ", x_val, " und ", y_val, " in ", exp, " mit ", obser, " angeschaut. Wo kriegt ", names(name), " jetzt ein CLD her? Dann eben per Hand aus der Matrix der $p$-Wert. ", name, " stöhnt..."),
               str_c("'Das Problem ist, dass ", program, " eben keine CLD kann. Die bräuchten wir dann schon dringend für unser Poster!', merkt ", betreuer, " mit Nachdruck an. ", name, " neigt den Kopf. 'Das wussten wir nicht vorher?', entfährt es ", pronom[4], " leicht entnervt. Da schaut ", betreuer, " seltsam betroffen. Hilft jetzt auch so gar nicht. ", name, " hatte sich zwei Variablen mit ", x_val, " und ", y_val, " in ", exp, " mit ", obser, " angeschaut. Jetzt möchte ", names(name), " eigentlich fertig werden und nicht nochmal alles neu in \\Rlogo und \\texttt\\{emmeans\\} machen. Dabei hatte ", names(name), " schon echt ne Menge in ", ort, " gemacht. Dann eben per Hand aus der Matrix der $p$-Wert. ", name, " muss sich echt zusammenreißen."),
               str_c("'Okay, dann nochmal für mich. Ich habe jetzt alles in ", program, " gemacht, aber das Wichtigste, was gemacht werden soll, nämlich das CLD, das kann ich nicht in ", program, " machen?', ", name, " muss sich echt beherrschen. Immerhin betreut ", betreuer, " ja erst nicht seit gestern Abschlussarbeiten und wusste ja was gemacht werden soll! ", name, " hatte sich zwei Variablen mit ", x_val, " und ", y_val, " in ", exp, " mit ", obser, " angeschaut. Jetzt möchte ", names(name), " eigentlich fertig werden und nicht nochmal alles neu in \\Rlogo und \\texttt\\{emmeans\\} machen. Deshalb soll jetzt das CLD per Hand aus der Matrix der $p$-Wert abgeleitet werden. 'Ich glaube ich wechsel nochmal das Thema...', denkt ", name, ", verwirft dann aber den Gedanken.")) |> 
  sample(1)



@ 

\paragraph{Berechnung des Compact Letter Displays (CLD) anhand der Matrix der p-Werte}

\Sexpr{ques_vec}

<<multcomp-02-a, echo = FALSE>>=

data_tbl <- map_dfr(1:length(groups_vec), gen_data) %>% 
  set_names(c("treatment", "freshmatter")) %>% 
  select(treatment, freshmatter) |> 
  mutate(treatment = factor(treatment, labels = groups_vec)) %>% 
  sample_n(size = nrow(.)) 

x_val_name <- x_val |> str_split(" ", simplify = TRUE) |> magrittr::extract(1,1)

pacman::p_load(rcompanion, magrittr, scales)
pair_wise_mat <- pairwise.t.test(data_tbl$freshmatter, data_tbl$treatment,
                p.adjust.method = "none") %>% 
  extract2("p.value") %>% 
  fullPTable() #%>%
#  pvalue(accuracy = 0.0001) |> 
  #matrix(ncol = 4, nrow = 4, byrow = TRUE,
        # dimnames = list(groups_vec,
       #                  groups_vec)) 

#diag(pair_wise_mat) <- ("1.0000")

pair_wise_mat |> 
  kable(booktabs = TRUE, align = "c") %>% 
  kable_styling(latex_options = "hold_position", font_size = 10) |> 
    row_spec(0,bold=TRUE) |> 
    column_spec(1,bold=TRUE) 
@

Leider kennen sich \Sexpr{name} mit dem \textit{Compact letter display (CLD)} überhaupt nicht aus. Deshalb braucht \Sexpr{names(name)} bei der Erstellung Ihre Hilfe!

\begin{enumerate}
  \item Formulieren Sie die wissenschaftliche Fragestellung! \textbf{(1 Punkt)}
  \item Formulieren Sie die statistischen Hypothesen! \textbf{(1 Punkt)}
\item Zeichnen Sie die sich anhand der Matrix der $p$-Werte ergebenden Barplots! \textbf{(2 Punkte)}
\item Ergänzen Sie das \textit{Compact letter display (CLD)}! Begründen Sie Ihre Antwort! \textbf{(4 Punkte)}
\item Interpretieren Sie das \textit{Compact letter display (CLD)} für \Sexpr{name} und \Sexpr{name_sec[1]}! \textbf{(2 Punkte)} 
\end{enumerate}


