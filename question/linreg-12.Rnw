\section{Aufgabe \hfill (9 Punkte)}

%% --------------------------------------------------------------------
\hfill\href{https://youtu.be/AwQEcQWLFCw}{\includegraphics[width =
  2cm]{img/youtube}}\\[1Ex]
%% --------------------------------------------------------------------

<<>>=

variable_vec <- c("P", "S", "N", "fertilizier", "weight", "height",
                  "dry", "rainfall", "block", "region", "dosage",
                  "center", "variety") %>%
  sample(3)


outcome_vec <- c("drymatter", "yield", "count", "quality\\_score", "dead") 

model_vec <- c("Gaussian", "Poisson") %>%
  sample(1)

@

Ein Feldexperiment wurde mit $n = 200$ Pflanzen durchgef{\"u}hrt. Folgende
Einflussvariablen ($x$) wurden erhoben: \Sexpr{pander::p(variable_vec, wrap
  = "", copula = " und ")}. Als m{\"o}gliche Outcomevariablen stehen Ihnen nun
folgende gemessene Endpunkte zu Verf{\"u}gung: \Sexpr{pander::p(outcome_vec, wrap
  = "", copula = " und ")}.

\begin{enumerate}
\item W{\"a}hlen Sie ein Outcome was zu der Verteilungsfamilie
  \textit{\Sexpr{model_vec}} geh{\"o}rt! \textbf{(1 Punkt)}
\item Schreiben Sie das Modell in der Form $y \sim x$ wie es in \Rlogo in
  der Funktion \texttt{glm()}
  {\"u}blich ist \textit{ohne Interaktionsterm}! \textbf{(3 Punkte)}
\item Schreiben Sie das Modell in der Form $y \sim x$ wie es in \Rlogo
  {\"u}blich ist und erg{\"a}nzen Sie \textit{einen} Interaktionsterm nach Wahl! \textbf{(1 Punkt)} 
\item Zeichen Sie eine \textit{\Sexpr{sample(c("schwache","starke"), 1)}}
  Interaktion in die Abbildung unten f{\"u}r den Endpunkt
  \textit{yield}. Erg{\"a}nzen Sie eine aussagekr{\"a}ftige Legende. Wie erkennen
  Sie eine Interaktion? Begr{\"u}nden Sie Ihre Antwort! \textbf{(4 Punkte)}
\end{enumerate}

<<modeling-R-01, results='asis', echo = FALSE, fig.height = 5, fig.width = 5, fig.align = "center", message = FALSE>>=

df <- data.frame()
p1 <- ggplot(df) + geom_point() + xlim(0, 10) + ylim(0, 10) +
  theme_minimal() + theme(
  axis.text.x = element_blank(),
  axis.text.y = element_blank()) +
  ylab("")
##
grid.arrange(p1, nrow = 1)

@
