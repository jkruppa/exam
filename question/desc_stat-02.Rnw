\section{Aufgabe \hfill (7 Punkte)}

\textit{Geben Sie grundsätzlich Formeln und Rechenweg zur L{\"o}sung der
  Teilaufgaben mit an!} \\[1Ex]

%% --------------------------------------------------------------------
\hfill\href{https://youtu.be/vXnLttRL_VI}{\includegraphics[width =
  2cm]{img/youtube}}\\[1Ex]
%% --------------------------------------------------------------------

<<>>=
name <- c("Jessica", "Paula", "Tina", "Sabine", "Adele",
          "Mark", "Jonas", "Eric", "Nikolas", "Manuel") |> 
  set_names(c("sie", "sie", "sie", "sie", "sie",
              "er", "er", "er", "er", "er")) |> sample(1)
pronom <- lst(sie = c("ihrem", "ihrer", "ihren"),
              er = c("seinem", "seiner", "seinen"))[[names(name)]]
project <- c(str_c(pronom[2], " Abschlussarbeit"), str_c(pronom[1], " Projektbericht"),
             str_c(pronom[2], " Hausarbeit")) |> sample(1)
betreuer <- c(str_c(pronom[2], " Betreuerin"), str_c(pronom[1], " Betreuer")) |> sample(1)
exp <- c("einem Gewächshausexperiment",
         "einem Freilandversuch",
         "einer Klimakammer",
         "einem Feldexperiment") %>% sample(1)
plant <- c("Maiss", "Erbsen", "Kartoffeln", "Lauch", "Erdbeeren",
           "Brokoli") %>% sample(1)
type <- c("Düngestufen ($ctrl$, $low$ und $high$)",
          "Lichtstufen ($none$, $200lm$ und $600lm$)",
          "Lüftungssysteme und Folientunnel ($ctrl$, $storm$ und $tornado$)",
          "Substrattypen ($torf$, $40p60n$ und $70p30n$)",
          "Bewässerungstypen ($low$, $mid$ und $high$)",
          "Genotypen ($AA$, $AB$ und $BB$)") %>% sample(1)
outcome <- c("Frischegewicht", "Trockengewicht", "Ertrag", "Proteingehalt") |> 
  set_names("freshmatter", "drymatter", "yield", "protein") |> 
  sample(1)
outcome_name <- c("Outcome ($Y$)", "Endpunkt ($Y$)", "Messwert ($Y$)") |> sample(1)
groups_vec <- type %>% 
  str_split("\\(|\\s|,|\\)", simplify = TRUE) %>% 
  str_subset("\\$") %>% 
  str_replace_all("\\$", "")
gen_data <- function(...){
  n_vec <- c(3, 4, 5) %>% sample(1)
  mean_vec <- c(25, 30, 35, 40, 45) %>% sample(1)
  sd_vec <- c(4:8) %>% sample(1)
  temp_tbl <- tibble(temp = rnorm(n = n_vec, mean = mean_vec, sd = sd_vec)) %>%
    mutate(temp = round(temp, 1)) %>% 
    set_names(stringi::stri_rand_strings(1, 7, '[A-Z]')) %>% 
    gather
  return(temp_tbl)
}

ques_vec <- c(str_c("Anschauen, was andere vor einem gemacht haben, ist eine Möglichkeit schnell ans Ziel zu gelangen. Deshalb hat sich ", name, " viele Poster in der Fakultät angeschaut und ist zum Schluß gekommen, dass Barplots eine häufig genutzte Abbildung sind. ", name, " soll nun in ", project, " ", plant, " untersuchen. Die Behandlung in ", project, " sind verschiedene ", type, ". Erhoben wurden von ", name, " als ", outcome_name, " \\textit{", outcome, "} benannt als ", "\\textit{", names(outcome), "} in ", pronom[2], " Exceldatei. Erwartungsgemäß erhält ", names(name), " von ", betreuer, " den Auftrag die erhobenen Daten als Barplots darzustellen. Dann kann ", name, " auch schonmal abschätzen, was bei einem statistischen Test rauskommen könnte."),
              str_c(name, " steht vor einem ersten Problem, denn wenn es nach ", betreuer, " geht, soll ", names(name), " in einem ", exp, " ", plant, " auswertet. Soweit eigentlich alles passend. Die Behandlung waren verschiedene ", type, ". In ", pronom[2], " Exceldatei hat ", names(name), " den ", outcome_name, " \\textit{", outcome, "} als ", "\\textit{", names(outcome), "} aufgenommen. Nun soll ", name, " die Daten eimal als Barplots in einer Präsentation visualisieren, damit ", betreuer, " wieder klar wird, was ", names(name), " eigentlich nochmal gemacht hat und was für ein Ergbnis in einem statistischen Test zu erwarten wäre."),
              str_c("Barplots sind bedeutend in der Darstellung von wissenschaftlichen Ergebnissen. Leider hat sich ", name, " nicht gemerkt, welche statistischen Maßzahlen für einen Barplot erhoben werden müssen. Das ist in soweit doof, da nach ", betreuer, " nun Barplots aus ", pronom[3], " Daten gebaut werden sollen, bevor es mit dem statistischen Testen weitergeht. Die Behandlung für ", plant, " waren verschiedene ", type, ". Erfasst wurde von ", name, " als ", outcome_name, " \\textit{", outcome, "}. ", name, " hat dann \\textit{", names(outcome), "} in ", pronom[2], " Exceldatei eintragen.")) |> sample(1)

@ 

\Sexpr{ques_vec}

<<barplot-01, results='asis', echo = FALSE>>=

data_tbl <- map_dfr(1:length(groups_vec), gen_data) %>% 
  set_names(c("treatment", names(outcome))) %>%
  mutate(treatment = factor(treatment, labels = groups_vec)) %>% 
  sample_n(size = nrow(.))

kable(data_tbl, booktabs = TRUE, align = "c") %>% 
  kable_styling(latex_options = "hold_position")
@

Leider kennt sich \Sexpr{name} mit der Erstellung von Barplots nicht aus. Deshalb braucht \Sexpr{names(name)} bei der Visualisierung Ihre Hilfe!

\begin{enumerate}
\item Zeichnen Sie in \textit{einer} Abbildung die Barplots für die
  Behandlung von \Sexpr{plant}! Beschriften Sie die Achsen entsprechend!
  \textbf{(4 Punkte)}
\item Beschriften Sie \textit{einen} Barplot mit den gängigen
  statistischen Maßzahlen! \textbf{(2 Punkte)}
\item Wenn Sie \textit{keinen Effekt} zwischen den Behandlungen von
  \Sexpr{plant} erwarten würden, wie sehen dann die Barplots aus?
  \textit{Antworten Sie mit einer Skizze der Barplots!}
  \textbf{(1 Punkt)}
\end{enumerate}
